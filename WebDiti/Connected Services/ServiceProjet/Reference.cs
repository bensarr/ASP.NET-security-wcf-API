//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebDiti.ServiceProjet {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceProjet.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WcfDiti.CompositeType GetDataUsingDataContract(WcfDiti.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WcfDiti.CompositeType> GetDataUsingDataContractAsync(WcfDiti.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProfil", ReplyAction="http://tempuri.org/IService1/AddProfilResponse")]
        bool AddProfil(WcfDiti.Models.Profil p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProfil", ReplyAction="http://tempuri.org/IService1/AddProfilResponse")]
        System.Threading.Tasks.Task<bool> AddProfilAsync(WcfDiti.Models.Profil p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListProfil", ReplyAction="http://tempuri.org/IService1/ListProfilResponse")]
        WcfDiti.Models.Profil[] ListProfil();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListProfil", ReplyAction="http://tempuri.org/IService1/ListProfilResponse")]
        System.Threading.Tasks.Task<WcfDiti.Models.Profil[]> ListProfilAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPersonne", ReplyAction="http://tempuri.org/IService1/AddPersonneResponse")]
        bool AddPersonne(WcfDiti.Models.Personne p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPersonne", ReplyAction="http://tempuri.org/IService1/AddPersonneResponse")]
        System.Threading.Tasks.Task<bool> AddPersonneAsync(WcfDiti.Models.Personne p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePersonne", ReplyAction="http://tempuri.org/IService1/UpdatePersonneResponse")]
        bool UpdatePersonne(WcfDiti.Models.Personne p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePersonne", ReplyAction="http://tempuri.org/IService1/UpdatePersonneResponse")]
        System.Threading.Tasks.Task<bool> UpdatePersonneAsync(WcfDiti.Models.Personne p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePersonne", ReplyAction="http://tempuri.org/IService1/DeletePersonneResponse")]
        bool DeletePersonne(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePersonne", ReplyAction="http://tempuri.org/IService1/DeletePersonneResponse")]
        System.Threading.Tasks.Task<bool> DeletePersonneAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListPersonne", ReplyAction="http://tempuri.org/IService1/ListPersonneResponse")]
        WcfDiti.Models.Personne[] ListPersonne(string email, string tel, string debutDateNaissance, string finDateNaissance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListPersonne", ReplyAction="http://tempuri.org/IService1/ListPersonneResponse")]
        System.Threading.Tasks.Task<WcfDiti.Models.Personne[]> ListPersonneAsync(string email, string tel, string debutDateNaissance, string finDateNaissance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonneById", ReplyAction="http://tempuri.org/IService1/getPersonneByIdResponse")]
        WcfDiti.Models.Personne getPersonneById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonneById", ReplyAction="http://tempuri.org/IService1/getPersonneByIdResponse")]
        System.Threading.Tasks.Task<WcfDiti.Models.Personne> getPersonneByIdAsync(System.Nullable<int> id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebDiti.ServiceProjet.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebDiti.ServiceProjet.IService1>, WebDiti.ServiceProjet.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WcfDiti.CompositeType GetDataUsingDataContract(WcfDiti.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WcfDiti.CompositeType> GetDataUsingDataContractAsync(WcfDiti.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool AddProfil(WcfDiti.Models.Profil p) {
            return base.Channel.AddProfil(p);
        }
        
        public System.Threading.Tasks.Task<bool> AddProfilAsync(WcfDiti.Models.Profil p) {
            return base.Channel.AddProfilAsync(p);
        }
        
        public WcfDiti.Models.Profil[] ListProfil() {
            return base.Channel.ListProfil();
        }
        
        public System.Threading.Tasks.Task<WcfDiti.Models.Profil[]> ListProfilAsync() {
            return base.Channel.ListProfilAsync();
        }
        
        public bool AddPersonne(WcfDiti.Models.Personne p) {
            return base.Channel.AddPersonne(p);
        }
        
        public System.Threading.Tasks.Task<bool> AddPersonneAsync(WcfDiti.Models.Personne p) {
            return base.Channel.AddPersonneAsync(p);
        }
        
        public bool UpdatePersonne(WcfDiti.Models.Personne p) {
            return base.Channel.UpdatePersonne(p);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePersonneAsync(WcfDiti.Models.Personne p) {
            return base.Channel.UpdatePersonneAsync(p);
        }
        
        public bool DeletePersonne(System.Nullable<int> id) {
            return base.Channel.DeletePersonne(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePersonneAsync(System.Nullable<int> id) {
            return base.Channel.DeletePersonneAsync(id);
        }
        
        public WcfDiti.Models.Personne[] ListPersonne(string email, string tel, string debutDateNaissance, string finDateNaissance) {
            return base.Channel.ListPersonne(email, tel, debutDateNaissance, finDateNaissance);
        }
        
        public System.Threading.Tasks.Task<WcfDiti.Models.Personne[]> ListPersonneAsync(string email, string tel, string debutDateNaissance, string finDateNaissance) {
            return base.Channel.ListPersonneAsync(email, tel, debutDateNaissance, finDateNaissance);
        }
        
        public WcfDiti.Models.Personne getPersonneById(System.Nullable<int> id) {
            return base.Channel.getPersonneById(id);
        }
        
        public System.Threading.Tasks.Task<WcfDiti.Models.Personne> getPersonneByIdAsync(System.Nullable<int> id) {
            return base.Channel.getPersonneByIdAsync(id);
        }
    }
}
